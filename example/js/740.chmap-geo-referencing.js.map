{"version":3,"file":"740.chmap-geo-referencing.js","mappings":"sHAAAA,EAAOC,QAAU,EAAjB,O,qMCEMC,EAAoB,IAAIC,EAAAA,QAAAA,kBAE9B,SAASC,EAAiBC,EAAKC,EAAOC,EAAIC,GACtCN,EAAkBO,GAAGJ,EAAKC,EAAOC,EAAIC,GAGzC,SAASE,EAAcC,GAGnB,IAAMC,EAAQD,EAAUE,MAAM,GAE9B,QAAcC,IAAVF,EAAqB,CAErB,IAAMG,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,WAEZ,IAAMC,EAAOH,EAAOI,OAEhBC,EAAAA,mBAAAA,WAA8BF,GAQlChB,EAAkBmB,KAAK,uBAAwB,CAAEH,KAAAA,EAAMI,KAAM,YALzDpB,EAAkBmB,KAAK,YAAa,wCAUrB,SAFDT,EAAMW,KAAKC,MAAM,KAAK,GAAGC,cAG3CV,EAAOW,WAAWd,EAAO,SAGzBV,EAAkBmB,KAAK,YAAa,uCAGxCV,EAAUgB,MAAQ,IAK1B,SAASC,EAAeC,EAAKC,GAEP,KAAf,IAAAD,GAAG,KAAHA,IAIHE,MAAMF,EAFY,CAAEG,OAAQ,QAG3BC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,GAAKD,EAAW,WAAe,CAACE,IAAKF,EAASG,YACxEJ,MAAK,SAAAC,GAAQ,OAAIA,EAAShB,UAC1Be,MAAK,SAAAf,GAAI,OAAIhB,EAAkBmB,KAAK,uBAAwB,CAAEH,KAAAA,EAAMI,KAAMQ,OAC1EQ,OAAM,SAAAC,GACHrC,EAAkBmB,KAAK,YAAakB,Q,qBCzD5C,IAAIC,EAAS,EAAQ,MAErBxC,EAAOC,QAAUuC,G,qBCFjB,IAAIC,EAAgB,EAAQ,MACxBT,EAAS,EAAQ,MAEjBU,EAAkBC,OAAOC,UAE7B5C,EAAOC,QAAU,SAAU4C,GACzB,IAAIC,EAAMD,EAAGE,KACb,MAAoB,iBAANF,GAAkBA,IAAOH,GACjCD,EAAcC,EAAiBG,IAAOC,IAAQJ,EAAgBK,KAAQf,EAASc,I,qBCRvF,EAAQ,MACR,IAAIE,EAAe,EAAQ,MAE3BhD,EAAOC,QAAU+C,EAAa,UAAUD,M,qBCHxC,IAAIP,EAAS,EAAQ,MAErBxC,EAAOC,QAAUuC,G,qBCFjB,IAAIS,EAAuB,eACvBC,EAAQ,EAAQ,MAChBC,EAAc,EAAQ,MAM1BnD,EAAOC,QAAU,SAAUmD,GACzB,OAAOF,GAAM,WACX,QAASC,EAAYC,MANf,cAOGA,MACHH,GAAwBE,EAAYC,GAAa7B,OAAS6B,O,qBCZpE,IAAIC,EAAc,EAAQ,MACtBC,EAAyB,EAAQ,MACjCC,EAAW,EAAQ,MACnBJ,EAAc,EAAQ,MAEtBK,EAAUH,EAAY,GAAGG,SACzBC,EAAa,IAAMN,EAAc,IACjCO,EAAQC,OAAO,IAAMF,EAAaA,EAAa,KAC/CG,EAAQD,OAAOF,EAAaA,EAAa,MAGzCI,EAAe,SAAUC,GAC3B,OAAO,SAAUC,GACf,IAAIC,EAAST,EAASD,EAAuBS,IAG7C,OAFW,EAAPD,IAAUE,EAASR,EAAQQ,EAAQN,EAAO,KACnC,EAAPI,IAAUE,EAASR,EAAQQ,EAAQJ,EAAO,KACvCI,IAIXhE,EAAOC,QAAU,CAGfgE,MAAOJ,EAAa,GAGpBK,IAAKL,EAAa,GAGlBd,KAAMc,EAAa,K,iBC5BrB7D,EAAOC,QAAU,iD,kCCAjB,IAAIkE,EAAI,EAAQ,MACZC,EAAQ,aAKZD,EAAE,CAAEE,OAAQ,SAAUC,OAAO,EAAMC,OAJN,EAAQ,KAIMC,CAAuB,SAAW,CAC3EzB,KAAM,WACJ,OAAOqB,EAAMK,U,qBCTjB,IAAIjC,EAAS,EAAQ,MAErBxC,EAAOC,QAAUuC","sources":["webpack://chmapGeoReferencing/./node_modules/@babel/runtime-corejs3/core-js/instance/trim.js","webpack://chmapGeoReferencing/./src/js/file-import/file-loader.js","webpack://chmapGeoReferencing/./node_modules/core-js-pure/actual/instance/trim.js","webpack://chmapGeoReferencing/./node_modules/core-js-pure/es/instance/trim.js","webpack://chmapGeoReferencing/./node_modules/core-js-pure/es/string/virtual/trim.js","webpack://chmapGeoReferencing/./node_modules/core-js-pure/features/instance/trim.js","webpack://chmapGeoReferencing/./node_modules/core-js-pure/internals/string-trim-forced.js","webpack://chmapGeoReferencing/./node_modules/core-js-pure/internals/string-trim.js","webpack://chmapGeoReferencing/./node_modules/core-js-pure/internals/whitespaces.js","webpack://chmapGeoReferencing/./node_modules/core-js-pure/modules/es.string.trim.js","webpack://chmapGeoReferencing/./node_modules/core-js-pure/stable/instance/trim.js"],"sourcesContent":["module.exports = require(\"core-js-pure/features/instance/trim\");","import { Commons, BasicDataProcessor } from '@chmap/utilities';\n\nconst localEventEmitter = new Commons.EventEmitterClass();\n\nfunction addEventListener(obj, types, fn, context){\n    localEventEmitter.on(obj, types, fn, context);\n}\n\nfunction loadLocalFile(fileInput){\n\n    //only process one file.\n    const aFile = fileInput.files[0];\n\n    if (aFile !== undefined) {\n\n        const reader = new FileReader();\n\n        reader.onload = () => {\n\n            const text = reader.result;\n\n            if(!BasicDataProcessor.isIIIFFile(text)){\n\n                //TODO: i18n\n                localEventEmitter.emit('exception', \"Only IIIF manifest file is allowed!\");\n                return;\n\n            }\n\n            localEventEmitter.emit('iiifManifestFileRead', { text, type: 'unknown'});\n        }\n\n        const extensionName = aFile.name.split(\".\")[1].toLowerCase();\n\n        if ( extensionName === \"json\") {\n            reader.readAsText(aFile, \"UTF-8\");\n        } else {\n            //TODO: i18n\n            localEventEmitter.emit('exception', \"Only IIIF manifest file is allowed!\");\n        }\n\n        fileInput.value = '';\n    }\n\n}\n\nfunction loadOnlineFile(url, fileType){\n\n    if(url.trim() === '') return;\n\n    const fetchOpts = { method: 'GET' };\n\n    fetch(url, fetchOpts)\n    .then(response => response.ok ? response : Promise.reject({err: response.status}))\n    .then(response => response.text())\n    .then(text => localEventEmitter.emit('iiifManifestFileRead', { text, type: fileType }))\n    .catch(error => {\n        localEventEmitter.emit('exception', error);\n    });\n\n}\n\nexport {\n    loadLocalFile,\n    loadOnlineFile,\n    addEventListener as on,\n}\n\n/* Events\n\n    { name: 'iiifManifestFileRead', params: { text, type }}\n    { name: 'exception', params: String }\n\n */\n","var parent = require('../../stable/instance/trim');\n\nmodule.exports = parent;\n","var isPrototypeOf = require('../../internals/object-is-prototype-of');\nvar method = require('../string/virtual/trim');\n\nvar StringPrototype = String.prototype;\n\nmodule.exports = function (it) {\n  var own = it.trim;\n  return typeof it == 'string' || it === StringPrototype\n    || (isPrototypeOf(StringPrototype, it) && own === StringPrototype.trim) ? method : own;\n};\n","require('../../../modules/es.string.trim');\nvar entryVirtual = require('../../../internals/entry-virtual');\n\nmodule.exports = entryVirtual('String').trim;\n","var parent = require('../../actual/instance/trim');\n\nmodule.exports = parent;\n","var PROPER_FUNCTION_NAME = require('../internals/function-name').PROPER;\nvar fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]()\n      || non[METHOD_NAME]() !== non\n      || (PROPER_FUNCTION_NAME && whitespaces[METHOD_NAME].name !== METHOD_NAME);\n  });\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar whitespaces = require('../internals/whitespaces');\n\nvar replace = uncurryThis(''.replace);\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = toString(requireObjectCoercible($this));\n    if (TYPE & 1) string = replace(string, ltrim, '');\n    if (TYPE & 2) string = replace(string, rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","// a string of all valid unicode whitespaces\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002' +\n  '\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","'use strict';\nvar $ = require('../internals/export');\nvar $trim = require('../internals/string-trim').trim;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\n// `String.prototype.trim` method\n// https://tc39.es/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n","var parent = require('../../es/instance/trim');\n\nmodule.exports = parent;\n"],"names":["module","exports","localEventEmitter","Commons","addEventListener","obj","types","fn","context","on","loadLocalFile","fileInput","aFile","files","undefined","reader","FileReader","onload","text","result","BasicDataProcessor","emit","type","name","split","toLowerCase","readAsText","value","loadOnlineFile","url","fileType","fetch","method","then","response","ok","err","status","catch","error","parent","isPrototypeOf","StringPrototype","String","prototype","it","own","trim","entryVirtual","PROPER_FUNCTION_NAME","fails","whitespaces","METHOD_NAME","uncurryThis","requireObjectCoercible","toString","replace","whitespace","ltrim","RegExp","rtrim","createMethod","TYPE","$this","string","start","end","$","$trim","target","proto","forced","forcedStringTrimMethod","this"],"sourceRoot":""}